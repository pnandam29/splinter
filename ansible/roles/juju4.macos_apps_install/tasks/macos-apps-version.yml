---
- block:
    - debug: var=version_app_cmd
    - debug: var=version_app_default
    - debug: var=version_app_plist_tag
  when: verbose is defined and verbose

- debug:
    msg: "Using custom commant to retrieve App version for '{{ version_app_path }}' from Info.plist"
  when: version_app_cmd is defined and version_app_cmd != ''

- block:
    - name: Check if '{{ version_app_path }}/Contents/Info.plist' exists
      stat:
        path: "{{ version_app_path }}/Contents/Info.plist"
      register: infoplist

    - name: Define command to retrieve App version for '{{ version_app_path }}' from Info.plist
      set_fact:
        version_app_cmd: "/usr/libexec/PlistBuddy -c 'print :{{ version_app_plist_tag }}'  '{{ version_app_path }}/Contents/Info.plist'"
      when: infoplist.stat.exists

    - name: Force update/install if no App command version
      set_fact:
        version_app_cmd: "echo {{ version_app_default }}"
      when: not infoplist.stat.exists

  when: version_app_cmd is not defined or version_app_cmd == ''

- name: Get current App version of {{ version_app_path }}
  shell: "{{ version_app_cmd }}"
  register: version_app_shell
  changed_when: False
  ignore_errors: True
  when: app.stat.exists and version_app_cmd != ''

- name: The current App version is '{{ version_app_shell.stdout }}'
  set_fact:
    currentversion: "{{ version_app_shell.stdout }}"
  when: version_app_shell.stdout is defined and version_app_shell.stdout

- name: The current App version is '{{ version_app_default }}'
  set_fact:
    currentversion: "{{ version_app_default }}"
  when: not (version_app_shell.stdout is defined and version_app_shell.stdout)
