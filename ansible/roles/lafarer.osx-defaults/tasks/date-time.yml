---
- block:
  - name: "Date Time - Get the current timezone"
    command: "systemsetup -gettimezone"
    register: result
    changed_when: no
    when: DateTime_TimeZone is defined

  - name: "Date Time - Set the timezone"
    command: "systemsetup -settimezone '{{ item }}'"
    loop:
      - "{{ DateTime_TimeZone }}"
    when: DateTime_TimeZone is defined and DateTime_TimeZone not in result.stdout
    notify: Restart MenuBar

  - name: "Date Time - Set date and time automatically"
    command: "systemsetup -setusingnetworktime {{ item }}"
    loop:
      - "{{ DateTime_AutomaticDateTime }}"
    when: DateTime_AutomaticDateTime is defined
    register: result
    changed_when: "'already' not in result.stdout"
    notify: Restart MenuBar

  - name: "Date Time - Get the current time server"
    command: "systemsetup -getnetworktimeserver"
    register: result
    changed_when: no
    when: DateTime_TimeServer is defined

  - name: "Date Time - Set time server"
    command: "systemsetup -setnetworktimeserver '{{ item }}'"
    loop:
      - "{{ DateTime_TimeServer }}"
    when: DateTime_TimeServer is defined and DateTime_TimeServer not in result.stdout
    notify: Restart MenuBar

  - name: "Date Time - Set time zome automatically using current location"
    osx_defaults: { domain: '/Library/Preferences/com.apple.timezone.auto.plist', key: 'Active', type: bool, value: "{{ item }}" }
    loop:
      - "{{ DateTime_AutomaticTimeZone }}"
    when: DateTime_AutomaticTimeZone is defined
    notify: Restart MenuBar
  # the above block is run as superuser
  become: yes

- block:
  - name: "Date Time - Menu bar settings"
    osx_defaults: { domain: 'com.apple.menuextra.clock', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: 'DateFormat', type: 'string', value: '{{ DateTime_DateFormat }}'}
      - { key: 'FlashDateSeparators', type: 'bool', value: '{{ DateTime_FlashDateSeparators }}'}
      - { key: 'IsAnalog', type: 'bool', value: '{{ DateTime_IsAnalog }}'}
    when: item.value | string | length > 0
    notify: Restart MenuBar
  # Privilege escalation to `target_user_id` is only required for inner steps when
  # the `target_user_id` doesn't match the `ansible_user_id`
  become: "{{ target_user_id != ansible_user_id }}"
  become_user: "{{ target_user_id }}"
